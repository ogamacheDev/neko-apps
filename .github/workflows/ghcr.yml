name: "amd64 images"

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:

env:
  BASE_IMAGE: ghcr.io/m1k1o/neko/base:latest

jobs:
  build-app:
    name: Build App Image
    runs-on: ubuntu-latest
    strategy:
      # Will build all images even if some fail.
      fail-fast: false
      matrix:
        include:
          - name: discord
            platforms: linux/amd64
          - name: kodi
            platforms: linux/amd64
          - name: vncviewer
            platforms: linux/amd64
          - name: vscode
            platforms: linux/amd64
          - name: zoom
            platforms: linux/amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.name }}
          tags: |
            type=edge,branch=master
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.name }}
          file: ${{ matrix.name }}/${{ matrix.dockerfile || 'Dockerfile' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
          platforms: ${{ matrix.platforms || 'linux/amd64' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
