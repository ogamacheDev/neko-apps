#!/bin/sh
cd "$(dirname "$0")"

if [ -f ".env" ]
then
  export $(cat .env | sed 's/#.*//g' | xargs)
fi

if [ -f ".env.local" ]
then
  export $(cat .env.local | sed 's/#.*//g' | xargs)
fi

build() {
  # build image
  docker build -t "${BUILD_IMAGE}:$1" --build-arg="BASE_IMAGE=${BASE_IMAGE}" -f "$1/Dockerfile" "$1/"
}

build_intel() {
  if [ -f "$1/Dockerfile.intel" ]
  then
    # build dedicated Intel image
    docker build -t "${BUILD_IMAGE}:intel-$1" --build-arg="BASE_IMAGE=${INTEL_BASE_IMAGE}" -f "$1/Dockerfile.intel" "$1/"
  else
    # try to build Intel image with common Dockerfile
    docker build -t "${BUILD_IMAGE}:intel-$1" --build-arg="BASE_IMAGE=${INTEL_BASE_IMAGE}" -f "$1/Dockerfile" "$1/"
  fi
}

build_nvidia() {
  if [ -f "$1/Dockerfile.nvidia" ]
  then
    # build dedicated nvidia image
    docker build -t "${BUILD_IMAGE}:nvidia-$1" --build-arg="BASE_IMAGE=${NVIDIA_BASE_IMAGE}" -f "$1/Dockerfile.nvidia" "$1/"
  else
    # try to build nvidia image with common Dockerfile
    docker build -t "${BUILD_IMAGE}:nvidia-$1" --build-arg="BASE_IMAGE=${NVIDIA_BASE_IMAGE}" -f "$1/Dockerfile" "$1/"
  fi
}

case $1 in
  # build intel- images
  intel-*) build_intel "${1#intel-}";;
  # build nvidia- images
  nvidia-*) build_nvidia "${1#nvidia-}";;
  # build images
  *) build "$1";;
esac
